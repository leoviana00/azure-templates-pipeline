steps:
# Instalação do Helm 
- task: HelmInstaller@1
  displayName: 'install helm'
  inputs:
    helmVersionToInstall: $(helmVersion)

# Download artifact
- download: ci-pipeline
  artifact: build-artifact

# Deploy no aks
- bash: |
    az login --service-principal -u $(aksSpId) -p '$(aksSpSecret)' --tenant $(aksSpTenantId)
    az aks get-credentials -n $(aks) -g $(rg)
    echo "$(registryPassword)" | helm registry login $(registryServerName) --username $(registryLogin) --password-stdin
    helmChartVersion=$(jq .helmChartVersion $(pipeline.workspace)/ci-pipeline/build-artifact/variables.json -r)
    helm chart pull $(registryServerName)/charts/$(projectName):$helmChartVersion
    helm chart export $(registryServerName)/charts/$(projectName):$helmChartVersion --destination $(pipeline.workspace)/install
    helm upgrade \
      --namespace $(k8sNamespace) \
      --create-namespace \
      --install \
      --wait \
      --version $helmChartVersion \
      --set image.repository=$(registryServerName)/$(projectName) \
      --set ingress.enabled=false \
      -f $(pipeline.workspace)/ci-pipeline/build-artifact/azure-template-helm-chart/templates/java/Chart.yaml \
      -f $(pipeline.workspace)/ci-pipeline/build-artifact/azure-template-helm-chart/templates/java/values.yaml \
      $(projectName) \
      $(pipeline.workspace)/install/parrot
  failOnStderr: true
  displayName: 'deploy helm chart'


