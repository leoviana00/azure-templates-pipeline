stages:
- stage: Build
  displayName: 'Build'
  jobs:
  - job: 'Build'
    steps:
    - checkout: self
    - checkout: helmrepo
    - task: Docker@2
      displayName: dockerLogin
      inputs:
        command: login
        containerRegistry: $(dockerRegistryServiceConnectionName)
    - task: Docker@2
      displayName: dockerBuild
      inputs:
        repository: $(imageName)
        command: build
        Dockerfile: $(dockerfile)
        tags: |
          $(imageTag)
    - task: HelmInstaller@1
      displayName: "install helm"
      inputs:
        helmVersionToInstall: $(helmVersion)
    - script: |
        echo $(registryPassword) | helm registry login $(registryName).azurecr.io --username $(registryLogin) --password-stdin
        helm chart save $(helm package --app-version $(imageTag) --version $(helmChartVersion) ./$(chartHelmFile) | grep -o '/.*.tgz') $(registryName).azurecr.io/charts/$(projectName)
        helm chart push $(registryName).azurecr.io/charts/$(projectName):$(helmChartVersion)
        echo $(jq -n --arg version "$(helmChartVersion)" '{helmChartVersion: $version}') > $(build.artifactStagingDirectory)/variables.json
      failOnStderr: true
      displayName: "helm package"
    - task: CopyFiles@2
      inputs:
        sourceFolder: $(helmfrom)
        targetFolder: $(helmto)
    - publish: $(build.artifactStagingDirectory)
      artifact: build-artifact

- stage: Deploy
  displayName: 'Deploy'
  jobs:
  - job: 'Deploy'
    pool:
      vmImage: ubuntu-latest 
    steps:
    - script: echo Fake deploy code